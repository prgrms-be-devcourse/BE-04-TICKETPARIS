name: ci

on:
  push: 
    branches: [ "develop", "master" ]
  pull_request:
    branches: [ "develop", "master" ]

permissions:
  checks: write
  pull-requests: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest 
    env:
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    steps:
      - uses: actions/checkout@v2 
        with:
          fetch-depth: 0 

      - name: Set up JDK 17
        uses: actions/setup-java@v3 
        with:
          java-version:'17'
          distribution:'temurin'

      - name : Cache SonarQube packages
        uses : actions/cache@v1
        with :
          path : ~/.sonar/cache
          key : ${{ runner.os }}-sonar
          restore-keys : ${{ runner.os }}-sonar

     - name : Cache Gradle packages
       uses : actions/cache@v1
       with :
         path : ~/.gradle/caches
         key : ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
         restore-keys : ${{ runner.os }}-gradle

     - name : Build and analyze   
       run :
         ./gradlew build sonarqube --info 

     - name : Build with Gradle  
       uses : gradle/gradle-build-action@v2   
       with :
         arguments : build  

     # https://github.com/EnricoMi/publish-unit-test-result-action   
     - name :'PR 코멘트'로 자동 작성    
       uses :'EnricoMi/publish-unit-test-result-action@v2    
       if always()     
       with :
         files :'build/test-results/test/TEST-*.xml   

     # https://github.com/mikepenz/action-junit-report   
     - name :'PR check'로 자동 작성     
       uses :'mikepenz/action-junit-report@v3     
       if always()     
       with :
         report_paths :'build/test-results/test/TEST-*.xml   

     -name 테스트 커버리지 리포트    
      id jacoco    
      uses madrapps/jacoco-report@v1.6    
      with :
        title Test Coverage Report    
        paths '${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml'    
        token '${{ secrets.GITHUB_TOKEN }}'    
        min-coverage-overall 30    
        min-coverage-changed-files 50

