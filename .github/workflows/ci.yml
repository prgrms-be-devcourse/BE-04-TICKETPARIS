name: ci-with-docker

on:
  push: # 아래 브랜치에 Push되면 작동
    branches: [ "develop" ]
  pull_request: # 아래 브랜치에 PullRequest 되면 작동
    branches: [ "develop" ]

permissions:
  contents: read

# 작업들
jobs:
  # 작업 명(본인이 지으면 됨)
  build:
    environment: dev
    runs-on: ubuntu-latest # 대여해주는 서버
    steps:
      - uses: actions/checkout@v3 # 라이브러리 이용
      - name: Set up JDK 17 # JDK 17버전 사용
        uses: actions/setup-java@v3 # 라이브러리 이용
        with:
          java-version: '17' # 지바 버전에 따라 다르게 설정 필요
          distribution: 'temurin'

      - name: Build with Gradle # 빌드 작업
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: build

      # 멀티 플랫폼 이미지를 빌드하기 위하여 사용되는 하이퍼 바이저(에뮬레이터)
      - name: docker amulator
        uses: docker/setup-qemu-action@v2

      # 멀티 플랫폼 이미지를 빌드하기 위한 Docker CLI 확장 플러그인
      - name: docker buildx
        uses: docker/setup-buildx-action@v2

      # 도커에 로그인
      - name: docker hub login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 도커 파일을 빌드하고 도커 허브 레파지토리에 푸쉬
      - name: docker build & push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}
          platforms: linux/arm64
